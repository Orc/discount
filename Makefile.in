CC=@CC@ -I. -L.
AR=@AR@
RANLIB=@RANLIB@
LN=ln -s

BINDIR=@exedir@
MANDIR=@mandir@
LIBDIR=@libdir@
INCDIR=@prefix@/include

PGMS=markdown
SAMPLE_PGMS=mkd2html makepage
@THEME@SAMPLE_PGMS+= theme
MKDLIB=libmarkdown.@LIBEXT@
SONAME=$(MKDLIB).`cat VERSION | cut -b 1`
SHLIB=$(MKDLIB).`cat VERSION`
OBJS=mkdio.o markdown.o dumptree.o generate.o \
     resource.o docheader.o version.o toc.o css.o \
     xml.o Csio.o xmlpage.o basename.o emmatch.o \
     setup.o tags.o html5.o flags.o @AMALLOC@

MAN3PAGES=mkd-callbacks.3 mkd-functions.3 markdown.3 mkd-line.3

PIC_FLAGS=@PIC_FLAGS@
SHARED_FLAGS=@SHARED_FLAGS@

CFLAGS += ${PIC_FLAGS}

all: $(PGMS) $(SAMPLE_PGMS)

install: $(PGMS)
	@INSTALL_PROGRAM@ $(PGMS) $(DESTDIR)/$(BINDIR)
	@INSTALL_DATA@ $(MKDLIB) $(DESTDIR)/$(LIBDIR)
	@INSTALL_DATA@ mkdio.h $(DESTDIR)/$(INCDIR)

install.everything: install install.samples install.man

install.samples: $(SAMPLE_PGMS) install
	@INSTALL_PROGRAM@ $(SAMPLE_PGMS) $(DESTDIR)/$(BINDIR)
	@INSTALL_DIR@ $(DESTDIR)/$(MANDIR)/man1
	@INSTALL_DATA@ theme.1 $(DESTDIR)/$(MANDIR)/man1

install.man:
	@INSTALL_DIR@ $(DESTDIR)/$(MANDIR)/man3
	@INSTALL_DATA@ $(MAN3PAGES) $(DESTDIR)/$(MANDIR)/man3
	for x in mkd_line mkd_generateline; do \
	    ( echo '.\"' ; echo ".so man3/mkd-line.3" ) > $(DESTDIR)/$(MANDIR)/man3/$$x.3;\
	done
	for x in mkd_in mkd_string; do \
	    ( echo '.\"' ; echo ".so man3/markdown.3" ) > $(DESTDIR)/$(MANDIR)/man3/$$x.3;\
	done
	for x in mkd_compile mkd_css mkd_generatecss mkd_generatehtml mkd_cleanup mkd_doc_title mkd_doc_author mkd_doc_date; do \
	    ( echo '.\"' ; echo ".so man3/mkd-functions.3" ) > $(DESTDIR)/$(MANDIR)/man3/$$x.3; \
	done
	@INSTALL_DIR@ $(DESTDIR)/$(MANDIR)/man7
	@INSTALL_DATA@ markdown.7 mkd-extensions.7 $(DESTDIR)/$(MANDIR)/man7
	@INSTALL_DIR@ $(DESTDIR)/$(MANDIR)/man1
	@INSTALL_DATA@ markdown.1 $(DESTDIR)/$(MANDIR)/man1

install.everything: install install.man

version.o: version.c VERSION
	$(CC) -DVERSION=\"`cat VERSION`\" -c version.c

markdown: main.o $(MKDLIB)
	$(CC) -o markdown main.o -lmarkdown @LIBS@

# example programs
@THEME@theme:  theme.o $(MKDLIB) mkdio.h
@THEME@	$(CC) -o theme theme.o -lmarkdown @LIBS@


mkd2html:  mkd2html.o $(MKDLIB) mkdio.h
	$(CC) -o mkd2html mkd2html.o -lmarkdown @LIBS@

makepage:  makepage.c $(MKDLIB) mkdio.h
	$(CC) -o makepage makepage.c -lmarkdown @LIBS@

main.o: main.c mkdio.h config.h
	$(CC) -I. -c main.c

$(MKDLIB): $(OBJS)
@MKSTATIC@	$(AR) crv $(MKDLIB) $(OBJS)
@MKSTATIC@	$(RANLIB) $(MKDLIB)
@MKSHARED@	$(CC) $(SHARED_FLAGS)$(SONAME) $(PIC_FLAGS) -o $(SHLIB) $(OBJS)
@MKSHARED@	$(LN) -s $(SHLIB) $(SONAME)
@MKSHARED@	$(LN) -s $(SHLIB) $(MKDLIB)

verify: echo tools/checkbits.sh
	@./echo -n "headers ... "; tools/checkbits.sh && echo "GOOD"

test:	$(PGMS) echo cols verify
	@for x in tests/*.t; do \
	    sh $$x || exit 1; \
	done

cols:   tools/cols.c config.h
	$(CC) -o cols tools/cols.c
echo:   tools/echo.c config.h
	$(CC) -o echo tools/echo.c

clean:
	rm -f $(PGMS) $(SAMPLE_PGMS) *.o $(MKDLIB) *.so.*

distclean spotless: clean
	rm -f @GENERATED_FILES@ @CONFIGURE_FILES@

Csio.o: Csio.c cstring.h amalloc.h config.h markdown.h
amalloc.o: amalloc.c
basename.o: basename.c config.h cstring.h amalloc.h markdown.h
css.o: css.c config.h cstring.h amalloc.h markdown.h
docheader.o: docheader.c config.h cstring.h amalloc.h markdown.h
dumptree.o: dumptree.c markdown.h cstring.h amalloc.h config.h
emmatch.o: emmatch.c config.h cstring.h amalloc.h markdown.h
generate.o: generate.c config.h cstring.h amalloc.h markdown.h
main.o: main.c config.h amalloc.h
makepage.o: makepage.c
markdown.o: markdown.c config.h cstring.h amalloc.h markdown.h
mkd2html.o: mkd2html.c config.h mkdio.h cstring.h amalloc.h
mkdio.o: mkdio.c config.h cstring.h amalloc.h markdown.h
resource.o: resource.c config.h cstring.h amalloc.h markdown.h
theme.o: theme.c config.h mkdio.h cstring.h amalloc.h
toc.o: toc.c config.h cstring.h amalloc.h markdown.h
version.o: version.c config.h
xml.o: xml.c config.h cstring.h amalloc.h markdown.h
xmlpage.o: xmlpage.c config.h cstring.h amalloc.h markdown.h
